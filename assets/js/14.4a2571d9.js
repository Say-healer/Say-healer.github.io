(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{599:function(t,r,e){"use strict";e.r(r);var n=e(9),a=Object(n.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("字符串在编程的世界里用的最多的，今天就研究下字符串")]),t._v(" "),e("p",[t._v("Java 的字符串，String、StringBuffer、StringBuilder 有什么区别？")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("String 是 Java 语言中非常基数和重要的类，提供了构造和管理字符串的各种基本逻辑，她是典型的 Immutable 类，被声明成为 final class，所有属性也都是 final 的。也由于它的不可变性，类似拼接、裁剪字符串等动作，都会产生新的 String 对象。由于字符串操作的普遍性，所以相关操作的效率往往对应用性能有明显影响。")])]),t._v(" "),e("li",[e("p",[t._v("StringBuffer 是为解决上面提到拼接产生太多中间对象的问题而提供的一个类，我们可以用 append 或者 add 方法，把字符串添加到已有序列的末尾或者指定位置。StringBuffer 本质是一个线程安全的可修改字符序列，它保证了线程安全，也随之带来了额外的性能开销，所以除非有线程安全的需要，不然还是推荐使用它的后继者，也就是 StringBuilder。")])]),t._v(" "),e("li",[e("p",[t._v("StringBuilder 是 Java 1.5 中新增的，在能力上和 StringBuffer 没有本质区别，但是它去掉了线程安全的部分，有效减小了开销，是绝大部分情况下进行字符串拼接的首选。")])])]),t._v(" "),e("h2",{attrs:{id:"docker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[t._v("#")]),t._v(" Docker")])])}),[],!1,null,null,null);r.default=a.exports}}]);